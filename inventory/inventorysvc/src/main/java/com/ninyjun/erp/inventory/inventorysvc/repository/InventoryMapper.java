package com.ninyjun.erp.inventory.inventorysvc.repository;

import java.util.List;

import com.ninyjun.erp.inventory.inventorysdk.model.Inventory;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface InventoryMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVENTORY
     *
     * @mbg.generated Mon Dec 02 16:05:57 CST 2019
     */
    @Delete({
        "delete from INVENTORY",
        "where INVENTORY_ID = #{inventoryId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long inventoryId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVENTORY
     *
     * @mbg.generated Mon Dec 02 16:05:57 CST 2019
     */
    @Insert({
        "insert into INVENTORY (INVENTORY_ID, INVENTORY_BATCH_NO_ID, ",
        "PRODUCT_CODE, AMOUNT, ",
        "AMOUNT_LOSS, STOREHOUSE_CODE, ",
        "PRODUCE_DATE, INVALID_DATE, ",
        "VERSION_NO, CREATE_TIME, ",
        "CREATE_EMP_ID, CREATE_DEPART_ID)",
        "values (#{inventoryId,jdbcType=BIGINT}, #{inventoryBatchNoId,jdbcType=INTEGER}, ",
        "#{productCode,jdbcType=INTEGER}, #{amount,jdbcType=BIGINT}, ",
        "#{amountLoss,jdbcType=BIGINT}, #{storehouseCode,jdbcType=INTEGER}, ",
        "#{produceDate,jdbcType=TIMESTAMP}, #{invalidDate,jdbcType=TIMESTAMP}, ",
        "#{versionNo,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{createEmpId,jdbcType=VARCHAR}, #{createDepartId,jdbcType=VARCHAR})"
    })
    int insert(Inventory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVENTORY
     *
     * @mbg.generated Mon Dec 02 16:05:57 CST 2019
     */
    @Select({
        "select",
        "INVENTORY_ID, INVENTORY_BATCH_NO_ID, PRODUCT_CODE, AMOUNT, AMOUNT_LOSS, STOREHOUSE_CODE, ",
        "PRODUCE_DATE, INVALID_DATE, VERSION_NO, CREATE_TIME, CREATE_EMP_ID, CREATE_DEPART_ID",
        "from INVENTORY",
        "where INVENTORY_ID = #{inventoryId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="INVENTORY_ID", property="inventoryId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="INVENTORY_BATCH_NO_ID", property="inventoryBatchNoId", jdbcType=JdbcType.INTEGER),
        @Result(column="PRODUCT_CODE", property="productCode", jdbcType=JdbcType.INTEGER),
        @Result(column="AMOUNT", property="amount", jdbcType=JdbcType.BIGINT),
        @Result(column="AMOUNT_LOSS", property="amountLoss", jdbcType=JdbcType.BIGINT),
        @Result(column="STOREHOUSE_CODE", property="storehouseCode", jdbcType=JdbcType.INTEGER),
        @Result(column="PRODUCE_DATE", property="produceDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="INVALID_DATE", property="invalidDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="VERSION_NO", property="versionNo", jdbcType=JdbcType.BIGINT),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATE_EMP_ID", property="createEmpId", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_DEPART_ID", property="createDepartId", jdbcType=JdbcType.VARCHAR)
    })
    Inventory selectByPrimaryKey(Long inventoryId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVENTORY
     *
     * @mbg.generated Mon Dec 02 16:05:57 CST 2019
     */
    @Select({
        "select",
        "INVENTORY_ID, INVENTORY_BATCH_NO_ID, PRODUCT_CODE, AMOUNT, AMOUNT_LOSS, STOREHOUSE_CODE, ",
        "PRODUCE_DATE, INVALID_DATE, VERSION_NO, CREATE_TIME, CREATE_EMP_ID, CREATE_DEPART_ID",
        "from INVENTORY"
    })
    @Results({
        @Result(column="INVENTORY_ID", property="inventoryId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="INVENTORY_BATCH_NO_ID", property="inventoryBatchNoId", jdbcType=JdbcType.INTEGER),
        @Result(column="PRODUCT_CODE", property="productCode", jdbcType=JdbcType.INTEGER),
        @Result(column="AMOUNT", property="amount", jdbcType=JdbcType.BIGINT),
        @Result(column="AMOUNT_LOSS", property="amountLoss", jdbcType=JdbcType.BIGINT),
        @Result(column="STOREHOUSE_CODE", property="storehouseCode", jdbcType=JdbcType.INTEGER),
        @Result(column="PRODUCE_DATE", property="produceDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="INVALID_DATE", property="invalidDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="VERSION_NO", property="versionNo", jdbcType=JdbcType.BIGINT),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATE_EMP_ID", property="createEmpId", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_DEPART_ID", property="createDepartId", jdbcType=JdbcType.VARCHAR)
    })
    List<Inventory> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table INVENTORY
     *
     * @mbg.generated Mon Dec 02 16:05:57 CST 2019
     */
    @Update({
        "update INVENTORY",
        "set INVENTORY_BATCH_NO_ID = #{inventoryBatchNoId,jdbcType=INTEGER},",
          "PRODUCT_CODE = #{productCode,jdbcType=INTEGER},",
          "AMOUNT = #{amount,jdbcType=BIGINT},",
          "AMOUNT_LOSS = #{amountLoss,jdbcType=BIGINT},",
          "STOREHOUSE_CODE = #{storehouseCode,jdbcType=INTEGER},",
          "PRODUCE_DATE = #{produceDate,jdbcType=TIMESTAMP},",
          "INVALID_DATE = #{invalidDate,jdbcType=TIMESTAMP},",
          "VERSION_NO = #{versionNo,jdbcType=BIGINT},",
          "CREATE_TIME = SYSDATE(),",
          "CREATE_EMP_ID = #{createEmpId,jdbcType=VARCHAR},",
          "CREATE_DEPART_ID = #{createDepartId,jdbcType=VARCHAR}",
        "where INVENTORY_ID = #{inventoryId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Inventory record);

    @Update({
            "update INVENTORY",
            "set AMOUNT = AMOUNT + #{amount,jdbcType=BIGINT},",
            "VERSION_NO = VERSION_NO + 1 ,",
            "CREATE_TIME = SYSDATE(),",
            "CREATE_EMP_ID = #{createEmpId,jdbcType=VARCHAR},",
            "CREATE_DEPART_ID = #{createDepartId,jdbcType=VARCHAR}",
            "where INVENTORY_ID = #{inventoryId,jdbcType=BIGINT} ",
            "and VERSION_NO = #{versionNo,jdbcType=BIGINT}"
    })
    int updateAmountByPrimaryKey(Inventory record);


}